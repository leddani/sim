version: "3.9"

services:
  simstudio:
    image: ghcr.io/simstudioai/simstudio:latest
    restart: unless-stopped
    ports:
      - '3000:3000'
    deploy:
      resources:
        limits:
          memory: 8G
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-simstudio}
      - BETTER_AUTH_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET:-your_auth_secret_here}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your_encryption_key_here}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-placeholder}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-placeholder}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-placeholder}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-placeholder}
      - RESEND_API_KEY=${RESEND_API_KEY:-placeholder}
      - OLLAMA_URL=${OLLAMA_URL:-http://localhost:11434}
      - SOCKET_SERVER_URL=${SOCKET_SERVER_URL:-http://localhost:3002}
      - NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL:-http://localhost:3002}
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      realtime:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--spider', '--quiet', 'http://127.0.0.1:3000']
      interval: 90s
      timeout: 5s
      retries: 3
      start_period: 10s

  realtime:
    image: ghcr.io/simstudioai/realtime:latest
    restart: unless-stopped
    ports:
      - '3002:3002'
    deploy:
      resources:
        limits:
          memory: 4G
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-simstudio}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - BETTER_AUTH_URL=${BETTER_AUTH_URL:-http://localhost:3000}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET:-your_auth_secret_here}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--spider', '--quiet', 'http://127.0.0.1:3002/health']
      interval: 90s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Krijon pgvector me super stabilitet + logje të qarta
  dbinit:
    image: pgvector/pgvector:pg17
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-simstudio}
    entrypoint:
      - sh
      - -lc
      - >
        set -eux;
        # Prit derisa DB të jetë gati në nivel TCP/protokoll
        until pg_isready -h db -p 5432 -U "${POSTGRES_USER:-postgres}" -d "${POSTGRES_DB:-simstudio}"; do
          echo "DB not ready yet..."; sleep 1;
        done;
        export PGPASSWORD="${POSTGRES_PASSWORD:-postgres}";
        # Krijo extension-in 'vector' nëse mungon
        psql "host=db port=5432 user=${POSTGRES_USER:-postgres} dbname=${POSTGRES_DB:-simstudio}" -v ON_ERROR_STOP=1 -c "CREATE EXTENSION IF NOT EXISTS vector;";
        # Verifiko që u krijua
        psql "host=db port=5432 user=${POSTGRES_USER:-postgres} dbname=${POSTGRES_DB:-simstudio}" -v ON_ERROR_STOP=1 -c "SELECT extname, extversion FROM pg_extension WHERE extname='vector';"
    restart: "no"

  migrations:
    image: ghcr.io/simstudioai/migrations:latest
    depends_on:
      db:
        condition: service_healthy
      dbinit:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-simstudio}
      - PRISMA_LOG_LEVEL=debug
      - DEBUG=*
    entrypoint:
      - sh
      - -lc
      - >
        set -eux;
        echo "Running migrations…";
        bun run db:migrate || bunx prisma migrate deploy;
        echo "Migrations completed."
    restart: "no"

  db:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-simstudio}
    volumes:
      - sim_pgdata_v2:/var/lib/postgresql/data
    healthcheck:
      # më robust: host lokal + DB e saktë
      test: ['CMD-SHELL', 'pg_isready -h 127.0.0.1 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-simstudio}']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  # Volumi ekzistues në Coolify po të jep WARN për project-id tjetër.
  # Për ta qetësuar WARN-in, deklaroje si external me emrin ekzakt nga logu:
  sim_pgdata_v2:
    name: cmf36di7q0076mzavpfhcd5ywsim_pgdata_v2
    external: true
